{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/divya/Desktop/gitReact/ReactJs/todo-app/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet AddList = props => {\n  _s();\n\n  const {\n    state,\n    setstate\n  } = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      class: \"strike\",\n      children: [props.listEle, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"complete\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddList, \"xpSJBWTJPVpXkFuyZUFDtjVVnzs=\");\n\n_c = AddList;\n\nlet TodoAppComponent = () => {\n  _s2();\n\n  const [todoArr, setTodo] = React.useState([{\n    name: 'Shopping',\n    isCompleted: false\n  }, {\n    name: 'React ToDo',\n    isCompleted: false\n  }]);\n\n  let printVal = () => {\n    let inpEle = document.getElementById('task');\n    let newVal = {\n      name: inpEle.value,\n      isCompleted: false\n    };\n    inpEle.value = \"\";\n    inpEle.focus();\n    let newtodoArr = todoArr.concat([newVal]);\n    setTodo(newtodoArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"43%\",\n      marginTop: \"5%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printVal,\n      children: \"Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), todoArr.map(todo => /*#__PURE__*/_jsxDEV(AddList, {\n      listEle: todo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TodoAppComponent, \"6bwwoYdByyPoBaiJOc1XTZ/9zSg=\");\n\n_c2 = TodoAppComponent;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(TodoAppComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddList\");\n$RefreshReg$(_c2, \"TodoAppComponent\");","map":{"version":3,"sources":["/home/divya/Desktop/gitReact/ReactJs/todo-app/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","AddList","props","state","setstate","useState","listEle","TodoAppComponent","todoArr","setTodo","name","isCompleted","printVal","inpEle","document","getElementById","newVal","value","focus","newtodoArr","concat","marginLeft","marginTop","map","todo","render"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,IAAIC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAiBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAvB;AAEE,sBACE;AAAA,2BACE;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA,iBAAoBH,KAAK,CAACI,OAA1B,eACA;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVD;;GAAIL,O;;KAAAA,O;;AAYJ,IAAIM,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBZ,KAAK,CAACQ,QAAN,CAAe,CAAC;AAAEK,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,WAAW,EAAE;AAAjC,GAAD,EAA2C;AAAED,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,WAAW,EAAE;AAAnC,GAA3C,CAAf,CAA3B;;AAEA,MAAIC,QAAQ,GAAG,MAAM;AACnB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACA,QAAIC,MAAM,GAAG;AAAEN,MAAAA,IAAI,EAAEG,MAAM,CAACI,KAAf;AAAsBN,MAAAA,WAAW,EAAE;AAAnC,KAAb;AACAE,IAAAA,MAAM,CAACI,KAAP,GAAe,EAAf;AACAJ,IAAAA,MAAM,CAACK,KAAP;AACA,QAAIC,UAAU,GAAGX,OAAO,CAACY,MAAR,CAAe,CAACJ,MAAD,CAAf,CAAjB;AACAP,IAAAA,OAAO,CAACU,UAAD,CAAP;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAAZ;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEV,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGJ,OAAO,CAACe,GAAR,CAAaC,IAAD,iBAAU,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,IAAI,CAACd;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAtB,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApBD;;IAAIH,gB;;MAAAA,gB;AAuBJT,QAAQ,CAAC2B,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEX,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet AddList = (props) => {\nconst {state,setstate}=React.useState(false)\n\n  return (\n    <ul>\n      <li class=\"strike\">{props.listEle}\n      <button id=\"complete\">Completed</button>\n      </li>\n    </ul>\n  )\n}\n\nlet TodoAppComponent = () => {\n  const [todoArr, setTodo] = React.useState([{ name: 'Shopping', isCompleted: false }, { name: 'React ToDo', isCompleted: false }])\n\n  let printVal = () => {\n    let inpEle = document.getElementById('task');\n    let newVal = { name: inpEle.value, isCompleted: false };\n    inpEle.value = \"\";\n    inpEle.focus();\n    let newtodoArr = todoArr.concat([newVal]);\n    setTodo(newtodoArr);\n  }\n\n  return (\n    <div style={{ marginLeft: \"43%\", marginTop: \"5%\" }}>\n      <input type=\"text\" id=\"task\" />\n      <button onClick={printVal}>Add ToDo</button>\n\n      {todoArr.map((todo) => <AddList listEle={todo.name} />)}\n    </div>\n  )\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoAppComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}
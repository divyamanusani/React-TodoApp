{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/divya/Desktop/gitReact/ReactJs/todo-app/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet AddList = props => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: props.listEle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddList;\n\nlet TodoAppComponent = () => {\n  _s();\n\n  const [todoArr, setTodo] = React.useState([{\n    name: 'Shopping',\n    isCompleted: false\n  }, {\n    name: 'React ToDo',\n    isCompleted: false\n  }]);\n\n  let printVal = () => {\n    let inpEle = document.getElementById('task');\n    let newVal = inpEle.value;\n    inpEle.value = \"\";\n    inpEle.focus();\n    let newtodoArr = todoArr.concat([newVal]);\n    setTodo(newtodoArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"43%\",\n      marginTop: \"5%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printVal,\n      children: \"Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), todoArr.map(todo => /*#__PURE__*/_jsxDEV(AddList, {\n      listEle: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoAppComponent, \"jwyV+06etjTMJ4UjAFgdzAdy3AI=\");\n\n_c2 = TodoAppComponent;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(TodoAppComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddList\");\n$RefreshReg$(_c2, \"TodoAppComponent\");","map":{"version":3,"sources":["/home/divya/Desktop/gitReact/ReactJs/todo-app/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","AddList","props","listEle","TodoAppComponent","todoArr","setTodo","useState","name","isCompleted","printVal","inpEle","document","getElementById","newVal","value","focus","newtodoArr","concat","marginLeft","marginTop","map","todo","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,IAAIC,OAAO,GAAIC,KAAD,IAAW;AACvB,sBACE;AAAA,2BACE;AAAA,gBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAIF,O;;AAQJ,IAAIG,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBT,KAAK,CAACU,QAAN,CAAe,CAAC;AAACC,IAAAA,IAAI,EAAC,UAAN;AAAiBC,IAAAA,WAAW,EAAC;AAA7B,GAAD,EAAsC;AAACD,IAAAA,IAAI,EAAC,YAAN;AAAmBC,IAAAA,WAAW,EAAC;AAA/B,GAAtC,CAAf,CAA3B;;AAEA,MAAIC,QAAQ,GAAG,MAAM;AACnB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACA,QAAIC,MAAM,GAAGH,MAAM,CAACI,KAApB;AACAJ,IAAAA,MAAM,CAACI,KAAP,GAAe,EAAf;AACAJ,IAAAA,MAAM,CAACK,KAAP;AACA,QAAIC,UAAU,GAAGZ,OAAO,CAACa,MAAR,CAAe,CAACJ,MAAD,CAAf,CAAjB;AACAR,IAAAA,OAAO,CAACW,UAAD,CAAP;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAAZ;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEV,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGL,OAAO,CAACgB,GAAR,CAAaC,IAAD,iBAAU,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAtB,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApBD;;GAAIlB,gB;;MAAAA,gB;AAuBJN,QAAQ,CAACyB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEX,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAb,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet AddList = (props) => {\n  return (\n    <ul>\n      <li>{props.listEle}</li>\n    </ul>\n  )\n}\n\nlet TodoAppComponent = () => {\n  const [todoArr, setTodo] = React.useState([{name:'Shopping',isCompleted:false}, {name:'React ToDo',isCompleted:false}])\n\n  let printVal = () => {\n    let inpEle = document.getElementById('task');\n    let newVal = inpEle.value;\n    inpEle.value = \"\";\n    inpEle.focus();\n    let newtodoArr = todoArr.concat([newVal]);\n    setTodo(newtodoArr);\n  }\n\n  return (\n    <div style={{ marginLeft: \"43%\", marginTop: \"5%\" }}>\n      <input type=\"text\" id=\"task\" />\n      <button onClick={printVal}>Add ToDo</button>\n\n      {todoArr.map((todo) => <AddList listEle={todo} />)}\n    </div>\n  )\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoAppComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}